// Initialisation de particles.js
// On vÃ©rifie d'abord si l'Ã©lÃ©ment 'particles-js' existe sur la page
if (document.getElementById("particles-js")) {
Â  particlesJS("particles-js", {
Â  Â  particles: {
Â  Â  Â  number: {
Â  Â  Â  Â  value: 80,Â  // Nombre de particules
Â  Â  Â  Â  density: {
Â  Â  Â  Â  Â  enable: true,
Â  Â  Â  Â  Â  value_area: 800
Â  Â  Â  Â  }
Â  Â  Â  },
Â  Â  Â  color: {
Â  Â  Â  Â  value: "#ffffff"Â  // Couleur des particules
Â  Â  Â  },
Â  Â  Â  shape: {
Â  Â  Â  Â  type: "circle",Â  // Forme des particules
Â  Â  Â  },
Â  Â  Â  opacity: {
Â  Â  Â  Â  value: 0.5,Â  // OpacitÃ© des particules
Â  Â  Â  Â  random: true,
Â  Â  Â  },
Â  Â  Â  size: {
Â  Â  Â  Â  value: 3,Â  // Taille des particules
Â  Â  Â  Â  random: true,
Â  Â  Â  },
Â  Â  Â  move: {
Â  Â  Â  Â  enable: true,
Â  Â  Â  Â  speed: 2,Â  // Vitesse de dÃ©placement des particules
Â  Â  Â  Â  direction: "none",
Â  Â  Â  Â  out_mode: "out"
Â  Â  Â  }
Â  Â  },
Â  Â  interactivity: {
Â  Â  Â  detect_on: "window",
Â  Â  Â  events: {
Â  Â  Â  Â  onhover: {
Â  Â  Â  Â  Â  enable: true,
Â  Â  Â  Â  Â  mode: "repulse"
Â  Â  Â  Â  },
Â  Â  Â  Â  onclick: {
Â  Â  Â  Â  Â  enable: true,
Â  Â  Â  Â  Â  mode: "push"
Â  Â  Â  Â  }
Â  Â  Â  }
Â  Â  },
Â  Â  retina_detect: true
Â  });
} // Fin du 'if' pour particles-js

// Switch theme (Light/Dark mode)
const themeToggleButton = document.getElementById("themeToggle");
// On vÃ©rifie SI le bouton existe AVANT de lui attacher un 'listener'
if (themeToggleButton) {
Â  themeToggleButton.addEventListener("click", function() {
Â  Â  document.body.classList.toggle("dark");
Â  Â  const themeText = document.getElementById("themeText");
    // On vÃ©rifie aussi si le texte existe
    if (themeText) {
Â  Â    if (document.body.classList.contains("dark")) {
Â  Â  Â    themeText.textContent = "ðŸŒ™ Mode Clair";
Â  Â    } else {
Â  Â  Â    themeText.textContent = "ðŸŒ™ Mode Sombre";
Â  Â    }
    }
Â  });
} // Fin du 'if' pour themeToggle

// Scroll back to top button
const backToTopButton = document.getElementById("backToTop");
// On vÃ©rifie SI le bouton existe AVANT de lui attacher un 'listener'
if (backToTopButton) {
Â  window.addEventListener("scroll", () => {
Â  Â  if (window.scrollY > 500) {
Â  Â  Â  backToTopButton.style.display = "block";
Â  Â  } else {
Â  Â  Â  backToTopButton.style.display = "none";
Â  Â  }
Â  });
} // Fin du 'if' pour backToTop

/* =================================
Â  Â CHARGEMENT AUTOMATIQUE HEADER/FOOTER
Â  Â (Cette partie est dÃ©jÃ  correcte)
Â  Â ================================= */

// Fonction pour charger un fichier HTML (un "partial")
function loadPartial(url, elementId) {
Â  fetch(url)
Â  Â  .then(response => {
Â  Â  Â  if (!response.ok) {
Â  Â  Â  Â  throw new Error('RÃ©seau: RÃ©ponse non OK');
Â  Â  Â  }
Â  Â  Â  return response.text();
Â  Â  })
Â  Â  .then(data => {
Â  Â  Â  document.getElementById(elementId).innerHTML = data;
Â  Â  })
Â  Â  .catch(error => {
Â  Â  Â  console.error('Erreur lors du chargement du partial:', url, error);
Â  Â  Â  document.getElementById(elementId).innerHTML = `<p style="color:red;">Erreur: impossible de charger ${url}</p>`;
Â  Â  });
}

// DÃ©tecter le chemin correct des partials
const isSubdirectory = window.location.pathname.includes('/courses/');
const partialsPath = isSubdirectory ? '../partials/' : 'partials/';

// Quand le contenu de la page est chargÃ©, on lance le chargement
document.addEventListener('DOMContentLoaded', () => {
Â  
Â  const cacheBust = '?v=' + new Date().getTime();
Â  
Â  // Charge le header
Â  loadPartial(partialsPath + 'header.html' + cacheBust, 'header-placeholder');
Â Â 
Â  // Charge le footer (si tu en as un)
Â  // loadPartial(partialsPath + 'footer.html' + cacheBust, 'footer-placeholder');
});
