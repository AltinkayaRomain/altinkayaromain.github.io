// Initialisation de particles.js
particlesJS("particles-js", {
Â  particles: {
Â  Â  number: {
Â  Â  Â  value: 80,Â  // Nombre de particules
Â  Â  Â  density: {
Â  Â  Â  Â  enable: true,
Â  Â  Â  Â  value_area: 800
Â  Â  Â  }
Â  Â  },
Â  Â  color: {
Â  Â  Â  value: "#ffffff"Â  // Couleur des particules
Â  Â  },
Â  Â  shape: {
Â  Â  Â  type: "circle",Â  // Forme des particules
Â  Â  },
Â  Â  opacity: {
Â  Â  Â  value: 0.5,Â  // OpacitÃ© des particules
Â  Â  Â  random: true,
Â  Â  },
Â  Â  size: {
Â  Â  Â  value: 3,Â  // Taille des particules
Â  Â  Â  random: true,
Â  Â  },
Â  Â  move: {
Â  Â  Â  enable: true,
Â  Â  Â  speed: 2,Â  // Vitesse de dÃ©placement des particules
Â  Â  Â  direction: "none",
Â  Â  Â  out_mode: "out"
Â  Â  }
Â  },
Â  interactivity: {
Â  Â  detect_on: "window",
Â  Â  events: {
Â  Â  Â  onhover: {
Â  Â  Â  Â  enable: true,
Â  Â  Â  Â  mode: "repulse"
Â  Â  Â  },
Â  Â  Â  onclick: {
Â  Â  Â  Â  enable: true,
Â  Â  Â  Â  mode: "push"
Â  Â  Â  }
Â  Â  }
Â  },
Â  retina_detect: true
});

// Switch theme (Light/Dark mode)
document.getElementById("themeToggle").addEventListener("click", function() {
Â  document.body.classList.toggle("dark");
Â  const themeText = document.getElementById("themeText");
Â  if (document.body.classList.contains("dark")) {
Â  Â  themeText.textContent = "ðŸŒ™ Mode Clair";
Â  } else {
Â  Â  themeText.textContent = "ðŸŒ™ Mode Sombre";
Â  }
});

// Scroll back to top button
const backToTopButton = document.getElementById("backToTop");
window.addEventListener("scroll", () => {
Â  if (window.scrollY > 500) {
Â  Â  backToTopButton.style.display = "block";
Â  } else {
Â  Â  backToTopButton.style.display = "none";
Â  }
});

/* =================================
Â  Â CHARGEMENT AUTOMATIQUE HEADER/FOOTER
Â  Â ================================= */

// Fonction pour charger un fichier HTML (un "partial")
function loadPartial(url, elementId) {
Â  fetch(url)
Â  Â  .then(response => {
Â  Â  Â  if (!response.ok) {
Â  Â  Â  Â  throw new Error('RÃ©seau: RÃ©ponse non OK');
Â  Â  Â  }
Â  Â  Â  return response.text();
Â  Â  })
Â  Â  .then(data => {
Â  Â  Â  // Injecte le HTML dans l'Ã©lÃ©ment_cible
Â  Â  Â  document.getElementById(elementId).innerHTML = data;
Â  Â  })
Â  Â  .catch(error => {
Â  Â  Â  console.error('Erreur lors du chargement du partial:', url, error);
Â  Â  Â  document.getElementById(elementId).innerHTML = `<p style="color:red;">Erreur: impossible de charger ${url}</p>`;
Â  Â  });
}

// DÃ©tecter le chemin correct des partials
// Si l'URL contient '/courses/', on est dans un sous-dossier, il faut remonter (../)
// Sinon, on est Ã  la racine.
const isSubdirectory = window.location.pathname.includes('/courses/');
const partialsPath = isSubdirectory ? '../partials/' : 'partials/';

// Quand le contenu de la page est chargÃ©, on lance le chargement
document.addEventListener('DOMContentLoaded', () => {
Â  
Â  // On ajoute un paramÃ¨tre unique (l'heure actuelle) pour "casser" le cache
Â  const cacheBust = '?v=' + new Date().getTime();

Â  // Charge le header dans la div #header-placeholder
Â  loadPartial(partialsPath + 'header.html' + cacheBust, 'header-placeholder');
Â Â 
Â  // Charge le footer (si tu en as un)
Â  // Tu peux dÃ©commenter la ligne ci-dessous si tu as un 'footer.html'
Â  // loadPartial(partialsPath + 'footer.html' + cacheBust, 'footer-placeholder');
});
